//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""e9b589d1-a5cc-4ba8-9251-63e9f8332707"",
            ""actions"": [
                {
                    ""name"": ""SwitchControlState"",
                    ""type"": ""Button"",
                    ""id"": ""8aa0126f-bb95-482f-b0b0-96315ee6c072"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""794299d1-56ea-488d-ba1a-8f23517d87e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomIn"",
                    ""type"": ""Value"",
                    ""id"": ""1dee4c8e-9e61-476d-9900-9dae4036e9e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomOut"",
                    ""type"": ""Value"",
                    ""id"": ""13c0b36b-db91-404f-9717-dcd0e5a4234e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""50febe85-c71c-4f6d-b15d-252f55750782"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""847ac409-3391-40c7-bc06-e24b58a66561"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchControlState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a1662d2-b689-4210-9f7f-d14e86343885"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05bced67-0580-4341-b4bb-4c88fee0fe69"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd35ca22-2737-4b72-8e1a-f8722d91c62a"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a518f90-0c3d-4c94-b363-602803be068d"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ZoomIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d014f1d-fe42-42d2-a3c9-c0cb3a917d5e"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0173bcf5-d732-4413-80d0-ff6716fdaee2"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""597606c8-3d4b-42b2-bda1-5b323bb426d0"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""46d3b28f-5056-41e5-a1cf-401f0b9f8f27"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerSprint"",
                    ""type"": ""Button"",
                    ""id"": ""a4a54349-275f-40c8-a9c2-277df1fafe09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJump"",
                    ""type"": ""Button"",
                    ""id"": ""7f5802cc-2cf8-4f2e-b889-1fa888d587dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerCrouch"",
                    ""type"": ""Button"",
                    ""id"": ""3d2226d7-29b4-4da8-b13b-876fb8eccc62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerInteract"",
                    ""type"": ""Button"",
                    ""id"": ""ad7d73ad-0f15-4593-9161-4383182cb274"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerBuildOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""e4df92d7-b739-41dd-afa3-675ac9711219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerInventoryOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""f1d370a2-bd6f-4e67-9dbb-03c8a544ccf0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerObjectiveOverlay"",
                    ""type"": ""Button"",
                    ""id"": ""d4369218-3c36-46e3-98ce-4db59f7bdeef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""122f1c76-507c-4605-89c1-9c34aedf3964"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""3b670b53-cf28-4e2d-ac5b-e285879c2c21"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""2097c163-399f-4647-98b7-a19d08a6504b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""19220c30-f8cd-438a-ba39-a0e85d7475ae"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""7045ceda-1ce4-426f-afe1-0cd84dc8bf2d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Stick"",
                    ""id"": ""e29fd7b8-7150-458b-9f37-546dd6bf24f5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""5c28bf20-ab3f-42aa-84f1-bbbad7548565"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""d826a941-87a8-4c57-872c-f23918bc1e79"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d89bef07-f936-415e-928d-903d0dd6348e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""8cbf4d31-5336-41b5-82ec-c21b473326c9"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6c1e19ce-d25d-4804-89df-725019d3e4ca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2261c05a-a5e0-46d4-855e-d6bd182e152e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b457a86-3db8-4db6-9a4a-2f018609ad86"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b422ee0-876a-4274-b39d-456e2d8253e0"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerCrouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9cf730f-63cd-4b42-921e-85ec771e62ab"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4b9da6d-e3a9-43f0-af9e-8b6409b6f204"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a383c7c-db93-40f5-b0ce-ca58344ee043"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerObjectiveOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""331159ca-187e-4494-8936-9f1b65faada7"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerObjectiveOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7a9542c-c15f-4c60-83c6-f0dea80f56b9"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5208440e-dad7-45a4-be90-871b5b1988ae"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerBuildOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0955537e-91ca-4807-9fff-fc1c2744add6"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInventoryOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9e9d714-f71a-4c9f-a639-50a69de66280"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerInventoryOverlay"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""523a3a40-d99a-43c5-acfd-fb2efbaaf235"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f0dad0f-7ee8-4fb6-98e1-cd6c28e7f4ea"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerSprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Satellite"",
            ""id"": ""0eda7410-4158-4a3b-a247-ef641bf86758"",
            ""actions"": [
                {
                    ""name"": ""SatelliteMove"",
                    ""type"": ""Value"",
                    ""id"": ""90e5e924-7ba2-49a3-b5a4-791a82a70f0f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SatelliteScan"",
                    ""type"": ""Button"",
                    ""id"": ""9a4176a6-907b-411d-80e1-cfa8891b6d42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""3835830a-fbd1-4fca-a350-e397f35c000b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bad57f91-3f70-45a4-b4e0-3a8d9e707a01"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ed5462e6-e5c3-4908-9284-6da72d66dec2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dbd730b5-0cb1-475d-8ad2-b6bb0ed47bf4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""376ac0ca-6a77-4fa3-8364-add4134f5a79"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d3708ec7-d767-4083-835f-6d3e10470478"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4086f531-25ee-46bd-b5d1-767160acdbf3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteScan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0126c97f-7115-4fc4-8e5d-42356ec3db14"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SatelliteScan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""56f7490e-17e1-423e-a893-c02cfbd74d78"",
            ""actions"": [
                {
                    ""name"": ""ResumeGame"",
                    ""type"": ""Button"",
                    ""id"": ""601bccd5-e0b7-4b2c-8165-766785c7dca0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c565e357-9d02-4848-a0db-2803cfd56a03"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bb07896-8762-46fc-bef2-c29cdd29edd4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_SwitchControlState = m_Gameplay.FindAction("SwitchControlState", throwIfNotFound: true);
        m_Gameplay_PauseGame = m_Gameplay.FindAction("PauseGame", throwIfNotFound: true);
        m_Gameplay_ZoomIn = m_Gameplay.FindAction("ZoomIn", throwIfNotFound: true);
        m_Gameplay_ZoomOut = m_Gameplay.FindAction("ZoomOut", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_PlayerMove = m_Player.FindAction("PlayerMove", throwIfNotFound: true);
        m_Player_PlayerSprint = m_Player.FindAction("PlayerSprint", throwIfNotFound: true);
        m_Player_PlayerJump = m_Player.FindAction("PlayerJump", throwIfNotFound: true);
        m_Player_PlayerCrouch = m_Player.FindAction("PlayerCrouch", throwIfNotFound: true);
        m_Player_PlayerInteract = m_Player.FindAction("PlayerInteract", throwIfNotFound: true);
        m_Player_PlayerBuildOverlay = m_Player.FindAction("PlayerBuildOverlay", throwIfNotFound: true);
        m_Player_PlayerInventoryOverlay = m_Player.FindAction("PlayerInventoryOverlay", throwIfNotFound: true);
        m_Player_PlayerObjectiveOverlay = m_Player.FindAction("PlayerObjectiveOverlay", throwIfNotFound: true);
        // Satellite
        m_Satellite = asset.FindActionMap("Satellite", throwIfNotFound: true);
        m_Satellite_SatelliteMove = m_Satellite.FindAction("SatelliteMove", throwIfNotFound: true);
        m_Satellite_SatelliteScan = m_Satellite.FindAction("SatelliteScan", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_ResumeGame = m_UI.FindAction("ResumeGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_SwitchControlState;
    private readonly InputAction m_Gameplay_PauseGame;
    private readonly InputAction m_Gameplay_ZoomIn;
    private readonly InputAction m_Gameplay_ZoomOut;
    public struct GameplayActions
    {
        private @InputSystem m_Wrapper;
        public GameplayActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SwitchControlState => m_Wrapper.m_Gameplay_SwitchControlState;
        public InputAction @PauseGame => m_Wrapper.m_Gameplay_PauseGame;
        public InputAction @ZoomIn => m_Wrapper.m_Gameplay_ZoomIn;
        public InputAction @ZoomOut => m_Wrapper.m_Gameplay_ZoomOut;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @SwitchControlState.started += instance.OnSwitchControlState;
            @SwitchControlState.performed += instance.OnSwitchControlState;
            @SwitchControlState.canceled += instance.OnSwitchControlState;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
            @ZoomIn.started += instance.OnZoomIn;
            @ZoomIn.performed += instance.OnZoomIn;
            @ZoomIn.canceled += instance.OnZoomIn;
            @ZoomOut.started += instance.OnZoomOut;
            @ZoomOut.performed += instance.OnZoomOut;
            @ZoomOut.canceled += instance.OnZoomOut;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @SwitchControlState.started -= instance.OnSwitchControlState;
            @SwitchControlState.performed -= instance.OnSwitchControlState;
            @SwitchControlState.canceled -= instance.OnSwitchControlState;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
            @ZoomIn.started -= instance.OnZoomIn;
            @ZoomIn.performed -= instance.OnZoomIn;
            @ZoomIn.canceled -= instance.OnZoomIn;
            @ZoomOut.started -= instance.OnZoomOut;
            @ZoomOut.performed -= instance.OnZoomOut;
            @ZoomOut.canceled -= instance.OnZoomOut;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_PlayerMove;
    private readonly InputAction m_Player_PlayerSprint;
    private readonly InputAction m_Player_PlayerJump;
    private readonly InputAction m_Player_PlayerCrouch;
    private readonly InputAction m_Player_PlayerInteract;
    private readonly InputAction m_Player_PlayerBuildOverlay;
    private readonly InputAction m_Player_PlayerInventoryOverlay;
    private readonly InputAction m_Player_PlayerObjectiveOverlay;
    public struct PlayerActions
    {
        private @InputSystem m_Wrapper;
        public PlayerActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_Player_PlayerMove;
        public InputAction @PlayerSprint => m_Wrapper.m_Player_PlayerSprint;
        public InputAction @PlayerJump => m_Wrapper.m_Player_PlayerJump;
        public InputAction @PlayerCrouch => m_Wrapper.m_Player_PlayerCrouch;
        public InputAction @PlayerInteract => m_Wrapper.m_Player_PlayerInteract;
        public InputAction @PlayerBuildOverlay => m_Wrapper.m_Player_PlayerBuildOverlay;
        public InputAction @PlayerInventoryOverlay => m_Wrapper.m_Player_PlayerInventoryOverlay;
        public InputAction @PlayerObjectiveOverlay => m_Wrapper.m_Player_PlayerObjectiveOverlay;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @PlayerMove.started += instance.OnPlayerMove;
            @PlayerMove.performed += instance.OnPlayerMove;
            @PlayerMove.canceled += instance.OnPlayerMove;
            @PlayerSprint.started += instance.OnPlayerSprint;
            @PlayerSprint.performed += instance.OnPlayerSprint;
            @PlayerSprint.canceled += instance.OnPlayerSprint;
            @PlayerJump.started += instance.OnPlayerJump;
            @PlayerJump.performed += instance.OnPlayerJump;
            @PlayerJump.canceled += instance.OnPlayerJump;
            @PlayerCrouch.started += instance.OnPlayerCrouch;
            @PlayerCrouch.performed += instance.OnPlayerCrouch;
            @PlayerCrouch.canceled += instance.OnPlayerCrouch;
            @PlayerInteract.started += instance.OnPlayerInteract;
            @PlayerInteract.performed += instance.OnPlayerInteract;
            @PlayerInteract.canceled += instance.OnPlayerInteract;
            @PlayerBuildOverlay.started += instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.performed += instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.canceled += instance.OnPlayerBuildOverlay;
            @PlayerInventoryOverlay.started += instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.performed += instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.canceled += instance.OnPlayerInventoryOverlay;
            @PlayerObjectiveOverlay.started += instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.performed += instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.canceled += instance.OnPlayerObjectiveOverlay;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @PlayerMove.started -= instance.OnPlayerMove;
            @PlayerMove.performed -= instance.OnPlayerMove;
            @PlayerMove.canceled -= instance.OnPlayerMove;
            @PlayerSprint.started -= instance.OnPlayerSprint;
            @PlayerSprint.performed -= instance.OnPlayerSprint;
            @PlayerSprint.canceled -= instance.OnPlayerSprint;
            @PlayerJump.started -= instance.OnPlayerJump;
            @PlayerJump.performed -= instance.OnPlayerJump;
            @PlayerJump.canceled -= instance.OnPlayerJump;
            @PlayerCrouch.started -= instance.OnPlayerCrouch;
            @PlayerCrouch.performed -= instance.OnPlayerCrouch;
            @PlayerCrouch.canceled -= instance.OnPlayerCrouch;
            @PlayerInteract.started -= instance.OnPlayerInteract;
            @PlayerInteract.performed -= instance.OnPlayerInteract;
            @PlayerInteract.canceled -= instance.OnPlayerInteract;
            @PlayerBuildOverlay.started -= instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.performed -= instance.OnPlayerBuildOverlay;
            @PlayerBuildOverlay.canceled -= instance.OnPlayerBuildOverlay;
            @PlayerInventoryOverlay.started -= instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.performed -= instance.OnPlayerInventoryOverlay;
            @PlayerInventoryOverlay.canceled -= instance.OnPlayerInventoryOverlay;
            @PlayerObjectiveOverlay.started -= instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.performed -= instance.OnPlayerObjectiveOverlay;
            @PlayerObjectiveOverlay.canceled -= instance.OnPlayerObjectiveOverlay;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Satellite
    private readonly InputActionMap m_Satellite;
    private List<ISatelliteActions> m_SatelliteActionsCallbackInterfaces = new List<ISatelliteActions>();
    private readonly InputAction m_Satellite_SatelliteMove;
    private readonly InputAction m_Satellite_SatelliteScan;
    public struct SatelliteActions
    {
        private @InputSystem m_Wrapper;
        public SatelliteActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @SatelliteMove => m_Wrapper.m_Satellite_SatelliteMove;
        public InputAction @SatelliteScan => m_Wrapper.m_Satellite_SatelliteScan;
        public InputActionMap Get() { return m_Wrapper.m_Satellite; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SatelliteActions set) { return set.Get(); }
        public void AddCallbacks(ISatelliteActions instance)
        {
            if (instance == null || m_Wrapper.m_SatelliteActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SatelliteActionsCallbackInterfaces.Add(instance);
            @SatelliteMove.started += instance.OnSatelliteMove;
            @SatelliteMove.performed += instance.OnSatelliteMove;
            @SatelliteMove.canceled += instance.OnSatelliteMove;
            @SatelliteScan.started += instance.OnSatelliteScan;
            @SatelliteScan.performed += instance.OnSatelliteScan;
            @SatelliteScan.canceled += instance.OnSatelliteScan;
        }

        private void UnregisterCallbacks(ISatelliteActions instance)
        {
            @SatelliteMove.started -= instance.OnSatelliteMove;
            @SatelliteMove.performed -= instance.OnSatelliteMove;
            @SatelliteMove.canceled -= instance.OnSatelliteMove;
            @SatelliteScan.started -= instance.OnSatelliteScan;
            @SatelliteScan.performed -= instance.OnSatelliteScan;
            @SatelliteScan.canceled -= instance.OnSatelliteScan;
        }

        public void RemoveCallbacks(ISatelliteActions instance)
        {
            if (m_Wrapper.m_SatelliteActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISatelliteActions instance)
        {
            foreach (var item in m_Wrapper.m_SatelliteActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SatelliteActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SatelliteActions @Satellite => new SatelliteActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_ResumeGame;
    public struct UIActions
    {
        private @InputSystem m_Wrapper;
        public UIActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @ResumeGame => m_Wrapper.m_UI_ResumeGame;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @ResumeGame.started += instance.OnResumeGame;
            @ResumeGame.performed += instance.OnResumeGame;
            @ResumeGame.canceled += instance.OnResumeGame;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @ResumeGame.started -= instance.OnResumeGame;
            @ResumeGame.performed -= instance.OnResumeGame;
            @ResumeGame.canceled -= instance.OnResumeGame;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IGameplayActions
    {
        void OnSwitchControlState(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnZoomIn(InputAction.CallbackContext context);
        void OnZoomOut(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnPlayerSprint(InputAction.CallbackContext context);
        void OnPlayerJump(InputAction.CallbackContext context);
        void OnPlayerCrouch(InputAction.CallbackContext context);
        void OnPlayerInteract(InputAction.CallbackContext context);
        void OnPlayerBuildOverlay(InputAction.CallbackContext context);
        void OnPlayerInventoryOverlay(InputAction.CallbackContext context);
        void OnPlayerObjectiveOverlay(InputAction.CallbackContext context);
    }
    public interface ISatelliteActions
    {
        void OnSatelliteMove(InputAction.CallbackContext context);
        void OnSatelliteScan(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnResumeGame(InputAction.CallbackContext context);
    }
}
